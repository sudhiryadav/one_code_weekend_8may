{"version":3,"sources":["actions/members.js","reducers/members.js","reducers/index.js","api/members.js","sagas/members.js","sagas/index.js","store.js","components/Filter.js","components/Table.js","components/Pager.js","components/Members.js","App.js","reportWebVitals.js","index.js"],"names":["Types","initialState","items","combineReducers","members","state","action","type","payload","getMembers","axios","get","watchGetMembersRequest","call","api","result","put","data","console","error","takeEvery","actions","userSagas","fork","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","Filter","setFilter","placeholder","useState","value","setValue","Input","onChange","e","target","style","width","Table","columns","pageIndex","loading","pageCount","deleteRow","editRow","selectRow","TableHead","TableRow","map","column","TableCell","header","accessor","TableBody","row","i","Checkbox","checked","id","name","email","role","cursor","onClick","color","marginLeft","colSpan","Pager","pageSize","nextPage","gotoPage","previousPage","setPageSize","canPreviousPage","canNextPage","className","disabled","defaultValue","page","Number","connect","getMembersRequest","props","useMemo","setData","setLoading","setPageCount","setPageIndex","filter","serverData","setServerData","useEffect","log","pc","Math","ceil","length","fetchData","deleteSelected","window","confirm","d","tempData","Object","assign","forEach","tableData","sd","indexOf","td","tempMembers","m","margin","maxWidth","marginTop","trim","alert","display","justifyContent","Button","variant","startIcon","pi","defaults","baseURL","App","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d062a7a.chunk.js","sourcesContent":["export const Types = {\n    GET_MEMBERS_REQUEST: 'GET_MEMBERS_REQUEST',\n    GET_MEMBERS_SUCCESS: 'GET_MEMBERS_SUCCESS'\n};\n\nexport const getMembersRequest = () => ({\n    type: Types.GET_MEMBERS_REQUEST\n});\n\nexport const getMembersSuccess = items => ({\n    type: Types.GET_MEMBERS_SUCCESS,\n    payload: { items }\n});\n","import { Types } from '../actions/members';\n\nconst initialState = {\n    items: []\n};\n\nexport const membersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_MEMBERS_SUCCESS:\n            return {\n                ...state,\n                items: action.payload.items\n            };\n        default:\n            return state;\n    }\n};\n","\nimport { combineReducers } from 'redux';\nimport { membersReducer } from './members';\n\nexport default combineReducers({\n    members: membersReducer\n});\n","import axios from 'axios';\n\nexport const getMembers = () => {\n    return axios.get('/adminui-problem/members.json', {\n        // params: {\n        //     total: 1000,\n        //     per_page: 12\n        // }\n    });\n};\n","import { takeEvery, call, put, fork } from 'redux-saga/effects';\nimport * as actions from '../actions/members';\nimport * as api from '../api/members';\n\nfunction* getMembers() {\n    try {\n        const result = yield call(api.getMembers);\n        yield put(actions.getMembersSuccess(result.data));\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nfunction* watchGetMembersRequest() {\n    yield takeEvery(actions.Types.GET_MEMBERS_REQUEST, getMembers);\n}\n\nconst userSagas = [fork(watchGetMembersRequest)];\n\nexport default userSagas;\n","import { all } from 'redux-saga/effects';\nimport userSagas from './members';\n\nexport default function* rootSaga() {\n    yield all([...userSagas]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport combineReducers from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(combineReducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import { Input } from '@material-ui/core';\nimport React, { useState } from 'react';\n\n\nconst Filter = ({ setFilter, placeholder }) => {\n    const [value, setValue] = useState('');\n    const onChange = e => {\n        setValue(e.target.value);\n        setFilter(e.target.value)\n    }\n    return (\n        <Input onChange={onChange} placeholder={placeholder} value={value} style={{ width: '100%' }} />\n    );\n}\n\nexport default Filter;","import React from 'react';\n\nimport MaUTable from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst Table = ({ columns, data, pageIndex, loading, pageCount, deleteRow, editRow, selectRow }) => {\n    // Render the UI for your table\n    return (\n        <>\n            <MaUTable>\n                <TableHead>\n                    <TableRow>\n                        {columns.map(column => (\n                            <TableCell key={column.accessor}>\n                                {column.header}\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.map((row, i) => {\n                        return (\n                            <TableRow key={row.id}>\n                                <TableCell>\n                                    <Checkbox checked={row.checked} onChange={() => selectRow(row.id)} />\n                                </TableCell>\n                                <TableCell>\n                                    {row.id}\n                                </TableCell>\n                                <TableCell>\n                                    {row.name}\n                                </TableCell>\n                                <TableCell>\n                                    {row.email}\n                                </TableCell>\n                                <TableCell>\n                                    {row.role}\n                                </TableCell>\n                                <TableCell>\n                                    <>\n                                        <EditIcon style={{ cursor: 'pointer' }} onClick={() => editRow(row.id)} />\n                                        <DeleteIcon color=\"error\" style={{ marginLeft: 10, cursor: 'pointer' }} onClick={() => deleteRow(row.id)} />\n                                    </>\n                                </TableCell>\n\n                            </TableRow>\n                        )\n                    })}\n                    <TableRow>\n                        {loading ? (\n                            // Use our custom loading state to show a loading indicator\n                            <TableCell colSpan=\"10000\">Loading...</TableCell>\n                        ) : (\n                            <TableCell colSpan=\"10000\">\n                                Showing {(pageIndex + 1)} of ~{pageCount} results\n                            </TableCell>\n                        )}\n                    </TableRow>\n                </TableBody>\n            </MaUTable>\n        </>\n    )\n}\n\nexport default Table;","import React from 'react';\n\nconst Pager = ({ pageSize, nextPage, gotoPage, previousPage, pageCount, pageIndex, setPageSize }) => {\n    const canPreviousPage = pageIndex > 0;\n    const canNextPage = pageIndex < pageCount - 1;\n\n    return (\n        <div className=\"pagination\">\n            <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                {'<<'}\n            </button>{' '}\n            <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                {'<'}\n            </button>{' '}\n            <button onClick={() => nextPage()} disabled={!canNextPage}>\n                {'>'}\n            </button>{' '}\n            <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                {'>>'}\n            </button>{' '}\n            <span>\n                Page{' '}\n                <strong>\n                    {pageIndex + 1} of {pageCount}\n                </strong>{' '}\n            </span>\n            <span>\n                | Go to page:{' '}\n                <input\n                    type=\"number\"\n                    defaultValue={pageIndex + 1}\n                    onChange={e => {\n                        const page = e.target.value ? Number(e.target.value) - 1 : 0\n                        gotoPage(page)\n                    }}\n                    style={{ width: '100px' }}\n                />\n            </span>{' '}\n            <select\n                value={pageSize}\n                onChange={e => {\n                    setPageSize(Number(e.target.value))\n                }}\n            >\n                {[10, 20, 30, 40, 50].map(pageSize => (\n                    <option key={pageSize} value={pageSize}>\n                        Show {pageSize}\n                    </option>\n                ))}\n            </select>\n        </div>\n\n    )\n}\nexport default Pager;","import React, { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { connect } from 'react-redux';\nimport { getMembersRequest } from '../actions/members';\nimport Filter from './Filter';\nimport Table from './Table';\nimport Pager from './Pager';\nimport Button from '@material-ui/core/Button';\nimport Delete from '@material-ui/icons/Delete'\n// Let's simulate a large dataset on the server (outside of our component)\n// const serverData = makeData(10000)\n\nconst Members = props => {\n\n    const { getMembersRequest, members } = props;\n\n    const columns = useMemo(\n        () =>\n            [\n                {\n                    header: 'Select',\n                    accessor: 'select',\n                },\n                {\n                    header: 'Id',\n                    accessor: 'id',\n                },\n                {\n                    header: 'Name',\n                    accessor: 'name',\n                },\n                {\n                    header: 'Email',\n                    accessor: 'email',\n                },\n                {\n                    header: 'Role',\n                    accessor: 'role',\n                },\n                {\n                    header: 'Action',\n                    accessor: 'action',\n                }\n            ],\n        []\n    )\n\n    // We'll start our table without any data\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [pageCount, setPageCount] = useState(0);\n    const [pageSize, setPageSize] = useState(10);\n    const [pageIndex, setPageIndex] = useState(0);\n    const [filter, setFilter] = useState('');\n    const [serverData, setServerData] = useState([]);\n\n    useEffect(() => {\n        console.log('fetchin')\n        const pc = Math.ceil(serverData.length / pageSize);\n        console.log('pc 1', pc);\n        setPageCount(pc);\n        fetchData()\n    }, [filter, pageIndex, pageSize, pageCount, serverData])\n\n    const nextPage = () => {\n        setPageIndex(pageIndex + 1);\n    }\n    const gotoPage = pi => {\n        setPageIndex(pi);\n    }\n    const previousPage = () => {\n        setPageIndex(pageIndex - 1);\n    }\n\n    const editRow = id => {\n        // show modal to edit the row.\n        alert(`Modal with data to be edited with id ${id}`);\n    }\n\n    const deleteRow = id => {\n        if (window.confirm('delete row?')) {\n            const sd = serverData.filter(d => d.id !== id);\n            console.log(sd.length)\n            setServerData(sd)\n        }\n    }\n\n    const deleteSelected = () => {\n        if (window.confirm('delete row?')) {\n            setServerData(serverData.filter(d => !d['selected']));\n        } else {\n            const tempData = Object.assign([], data);\n            tempData.forEach(d => d['selected'] = false)\n            setServerData(tempData)\n        }\n    }\n\n    const selectRow = id => {\n        // update the row with highlighting\n        setServerData(serverData.map(d => {\n            if (d.id === id) {\n                d['selected'] = !d['selected'];\n            }\n            return d;\n        }));\n    }\n\n    const fetchData = () => {\n        setLoading(true);\n        console.log(filter || 'none', '|', pageIndex, '|', pageCount, '|', pageSize, '|', pageCount);\n        let tableData = serverData.filter(sd => {\n            return filter === '' || (filter !== '' && (sd.name.indexOf(filter) >= 0 || sd.email.indexOf(filter) >= 0 || sd.role.indexOf(filter) >= 0 || sd.id.indexOf(filter) >= 0));\n        })\n\n        console.log('tableData.length', tableData.length);\n\n        const pc = Math.ceil(tableData.length / pageSize);\n        console.log('pc 2', pc);\n        setPageCount(pc);\n\n        // get the only page.\n        tableData = tableData.filter((td, i) => {\n            return i >= pageSize * pageIndex && i < (pageSize * pageIndex) + pageSize;\n        });\n\n        setData(tableData);\n        setLoading(false);\n    };\n\n\n    const filterData = value => {\n        setFilter(value.trim());\n    };\n\n    useEffect(() => {\n        let tempMembers = members.items.map(m => { m['selected'] = false; return m; });\n        console.log('initial server data')\n        setServerData(tempMembers);\n        const pc = Math.ceil(tempMembers.length / pageSize);\n        setPageCount(pc);\n    }, [members])\n\n    useEffect(() => {\n        getMembersRequest();\n    }, [getMembersRequest]);\n\n    return (\n        <div style={{ margin: 'auto', maxWidth: 1000, margin: 20 }}>\n            <h2 style={{ marginTop: 0 }}>Members</h2>\n            {loading && 'Loading...'}\n            <Filter setFilter={filterData} placeholder={`Search ${members.items.length} records...`} />\n            <Table\n                columns={columns}\n                data={data}\n                loading={loading}\n                pageCount={pageCount}\n                pageIndex={pageIndex}\n                deleteRow={deleteRow}\n                deleteSelected={deleteSelected}\n                selectRow={selectRow}\n                editRow={editRow}\n            />\n            <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: 10 }}>\n                <Button color=\"secondary\" variant=\"contained\" startIcon={<Delete />} onClick={deleteSelected} >Delete Selected</Button>\n                <Pager pageSize={pageSize} nextPage={nextPage} gotoPage={gotoPage} previousPage={previousPage} pageCount={pageCount} pageIndex={pageIndex} setPageSize={setPageSize} />\n            </div>\n        </div>\n    );\n};\n\nexport default connect(\n    ({ members }) => ({ members }),\n    {\n        getMembersRequest\n    }\n)(Members);\n","import React from 'react'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport axios from 'axios';\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport Members from './components/Members';\n\naxios.defaults.baseURL = 'https://geektrust.s3-ap-southeast-1.amazonaws.com';\n\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <div>\n        <CssBaseline />\n        <Members />\n      </div>\n    </Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}